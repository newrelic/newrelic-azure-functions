{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newRelicLicenseKey": {
      "type": "string",
      "metadata": {
        "description": "New Relic License Key"
      }
    },
    "targetStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Storage Account that you want to capture the log blobs from."
      },
      "minLength": 3,
      "maxLength": 24
    },
    "targetContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the container that contains the logs you want to forward."
      },
      "minLength": 3,
      "maxLength": 63
    },
    "location": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
            "description": "Region where all resources included in this template will be deployed. Leave this blank to use the same region as the one of the resource group."
        }
    },
    "newRelicEndpoint": {
      "type": "string",
      "defaultValue": "https://log-api.newrelic.com/log/v1",
      "metadata": {
        "description": "The Logs API endpoint used to send your logs to. By default, it is https://log-api.newrelic.com/log/v1 if your account is in the United States (US) region. Otherwise, if you're in the European Union (EU) region, you should use https://log-api.eu.newrelic.com/log/v1"
      }
    },
    "maxRetriesToResendLogs": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 1,
      "metadata": {
        "description": "Maximum number of attempts the forwarder function will perform in the event of a failure while sending your data."
      }
    },
    "retryInterval": {
      "type": "int",
      "defaultValue": 2000,
      "minValue": 100,
      "metadata": {
        "description": "Number of milliseconds to wait between consecutive retries to send the logs."
      }
    }
  },
  "variables": {
    "targetStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('targetStorageAccountName'))]",
    "blobForwarderFunctionArtifact": "https://github.com/newrelic/newrelic-azure-functions/releases/latest/download/BlobForwarder.zip",
    "onePerResourceGroupAndStorageAccountAndContainer": "[uniqueString(resourceGroup().id, parameters('targetStorageAccountName'), parameters('targetContainerName'))]",
    "functionAppName": "[concat('nrlogs-blobforwarder-', variables('onePerResourceGroupAndStorageAccountAndContainer'))]",
    "location": "[if(equals(parameters('location'), ''), resourceGroup().location, parameters('location'))]",
    "internalStorageAccountName": "[concat('nrlogs', variables('onePerResourceGroupAndStorageAccountAndContainer'))]"
  },
  "resources": [
    {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[variables('internalStorageAccountName')]",
        "location": "[variables('location')]",
        "sku": {
            "name": "Standard_LRS"
        },
        "kind": "StorageV2"
    },
    {
      "name": "[variables('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "TargetAccountConnection",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('targetStorageAccountName'), ';AccountKey=', listKeys(variables('targetStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "CONTAINER_NAME",
              "value": "[parameters('targetContainerName')]"
            },
            {
              "name": "NR_LICENSE_KEY",
              "value": "[parameters('newRelicLicenseKey')]"
            },
            {
              "name": "NR_ENDPOINT",
              "value": "[parameters('newRelicEndpoint')]"
            },
            {
              "name": "NR_MAX_RETRIES",
              "value": "[parameters('maxRetriesToResendLogs')]"
            },
            {
              "name": "NR_RETRY_INTERVAL",
              "value": "[parameters('retryInterval')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('internalStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName')), '2021-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('internalStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('internalStorageAccountName')), '2021-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14.1"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "name": "[concat(variables('functionAppName'), '/ZipDeploy')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "apiVersion": "2020-12-01",
      "properties": {
        "packageUri": "[variables('blobForwarderFunctionArtifact')]"
      }
    }
  ],
  "outputs": {}
}
